The goal of this paper is to implement a fast algorithm for solving
the PeakSeg problem described in
http://jmlr.org/proceedings/papers/v37/hocking15.html
** 26 Jan 2017
Guillaume's group meeting presentation slides
http://members.cbio.mines-paristech.fr/~thocking/HOCKING-PeakSegFPOP-pipeline-slides.pdf
** 10 Nov 2016

[[http://bl.ocks.org/tdhock/raw/9311ca39d643d127e04a088814c81ee1/][Data viz with smooth transitions, clarified titles]].

[[http://bl.ocks.org/tdhock/raw/7b595e74d059eb2e066d46a90c5b7724/][Revised interactive data viz]].

** 9 Nov 2016

[[http://bl.ocks.org/tdhock/raw/9a6ac163b8610314ed8e9751937ecea9/][Interactive data viz to explain supervised penalty learning for peaks]].

** 15 Aug 2016

Test accuracy and AUC data viz, explains why Segmentor gets such a
high test accuracy (it has a low true positive and false positive
rate) http://bl.ocks.org/tdhock/raw/886575874144c3b172ce6b7d7d770b9f/

** 10 Aug 2016

- [[http://cbio.ensmp.fr/~thocking/HOCKING-PeakSeg-functional-pruning-slides.pdf][Slides]] for group meeting presentation 11 Aug 2016.
- http://bl.ocks.org/tdhock/raw/b796b4be10aa431575bb01ec16035b23/
  shows min env in addition to min/less more computation.

** 3 Aug 2016
- C++ algo implemented in [[https://github.com/tdhock/coseg][coseg]] package.
- [[file:figure-PeakSegPDPA-demo.R]] created
  http://bl.ocks.org/tdhock/raw/8c5dd0af533e24a893e7c5232f9bc94c/
  using average loss instead of total loss.
** 13 May 2016

[[file:figure-cDPA-PDPA-all.R]] visualizes the optimality and feasibility
of the PDPA and cDPA models, and shows the interval counts in the PDPA
[[http://bl.ocks.org/tdhock/raw/4582904f843cc60639fdfeb9651cac73/]]

** 12 May 2016

[[file:figure-cDPA-PDPA.R]] shows the difference between the cDPA and PDPA
on real data: the cDPA recovers a sub-optimal solution that obeys the
strict inequality peak constraint, and the PDPA recovers the optimal
solution for the non-strict inequality peak
constraint. http://bl.ocks.org/tdhock/raw/24aa6387901edab1577ce24f1e736ff3/

** 10 May 2016

- [[file:figure-constrained-PDPA-normal-real.R]] makes
  http://cbio.ensmp.fr/~thocking/figure-constrained-PDPA-normal-real/
  a data viz which shows the constrained algorithm up to 5 segments
  for a data set with 121 points.

** 4 May 2016

- [[file:figure-constrained-PDPA-normal-panels.R]] implements the
  constrained PDPA algo with two kinds of min-less/min-more operators,
  inspired by two kinds of inequality constraints (strict and
  not). Visualization of running the algos up to 3 segments on 5 data
  sets with 4 data points each:
  [[http://bl.ocks.org/tdhock/raw/e924d180dda5d0cd1da8e8f556e741b7/]]
- [[file:figure-unconstrained-PDPA-normal.R]] implements the unconstrained
  PDPA and visualizes the functional cost model and pruning
  [[http://cbio.ensmp.fr/~thocking/figure-unconstrained-PDPA-normal-big/]]
